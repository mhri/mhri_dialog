> object mget python
    import sys
    import rospy
    import json
    from mhri_msgs.srv import ReadData, ReadDataRequest, GetDataList

    if len(args) < 1:
        rospy.logerr('Failed to execute mget... Check your sintax...')
        return

    memory_data_list = {}

    # Read Data List from Memory
    rospy.wait_for_service('social_events_memory/get_data_list')
    read_srv = rospy.ServiceProxy('social_events_memory/get_data_list', GetDataList)
    result = read_srv()
    for i in json.loads(result.data_list).keys():
        memory_data_list[i] = 'social_events_memory'

    rospy.wait_for_service('environmental_memory/get_data_list')
    read_srv = rospy.ServiceProxy('environmental_memory/get_data_list', GetDataList)
    result = read_srv()
    for i in json.loads(result.data_list).keys():
        memory_data_list[i] = 'environmental_memory'

    rospy.wait_for_service('system_events_memory/get_data_list')
    read_srv = rospy.ServiceProxy('system_events_memory/get_data_list', GetDataList)
    result = read_srv()
    for i in json.loads(result.data_list).keys():
        memory_data_list[i] = 'system_events_memory'

    # Parsing input args
    input_args = args[0].split('/')
    try:
        rospy.wait_for_service('%s/read_data'%memory_data_list[input_args[0]], timeout=1)
        read_memory = rospy.ServiceProxy('%s/read_data'%memory_data_list[input_args[0]], ReadData)

        req = ReadDataRequest()
        req.perception_name = input_args[0]
        req.query = '{}'
        req.data.append(input_args[1])

        response = read_memory(req)
        recv_data = json.loads(response.data)

    except rospy.ServiceException:
        e = sys.exc_info()[0]
        rospy.logerr(e)
        return None

    # if recv_data is number then return number format
    try:
        ret_data = int(recv_data[input_args[1]])
        return ret_data
    except ValueError:
        try:
            ret_data = float(recv_data[input_args[1]])
            return ret_data
        except ValueError:
            ret_data = recv_data[input_key[1]]
            return ret_data
< object


> object mset python
    import rospy
    import json
    from mhri_msgs.srv import WriteData, WriteDataRequest

    if len(args) < 1:
        rospy.logerr('Failed to write social_memory.. Check your sintax...')
        return False

    input_key = args[0]
    input_data = args[1:]

    rospy.wait_for_service('write_data')
    try:
        write_memory = rospy.ServiceProxy('write_data', WriteData)

        write_data = WriteDataRequest()
        write_data.event_name = input_key

        event_split = input_data[0].split(':')
        write_data.event = '{"%s": %s}'%(event_split[0], event_split[1])

        arg_data = {}
        for data in input_data[1:]:
            data_split = data.split(':')
            arg_data[data_split[0]] = data_split[1]

        # print(json.dumps(arg_data))
        write_data.data = json.dumps(arg_data)
        write_data.by = 'dialog_script'

        write_response = write_memory(write_data)
    except rospy.ServiceException, e:
        rospy.logerr('Service call failed...')
        return False
    return True
< object
